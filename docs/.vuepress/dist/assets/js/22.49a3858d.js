(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{297:function(s,t,a){s.exports=a.p+"assets/img/scope.d09845df.png"},298:function(s,t,a){s.exports=a.p+"assets/img/scope2.42406756.png"},489:function(s,t,a){"use strict";a.r(t);var n=a(13),e=Object(n.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h2",{attrs:{id:"作用域-执行上下文"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#作用域-执行上下文"}},[s._v("#")]),s._v(" 作用域 & 执行上下文")]),s._v(" "),t("p",[s._v("先看一段源代码，分析一下变量提升和预编译的过程：")]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("GLOBAL")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("fn")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("c")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  console"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("c"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// true")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" c "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  console"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("a"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// function a(){}")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" a "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  console"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("a"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 1")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("a")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// wo can do something")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  console"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("a"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 1")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("b")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 函数声明")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function-variable function"}},[s._v("b")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    console"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"函数表达式"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("b")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    console"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"函数声明"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("b")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 函数表达式")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" d "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("fn")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br")])]),t("h3",{attrs:{id:"js-解释引擎工作流程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#js-解释引擎工作流程"}},[s._v("#")]),s._v(" JS 解释引擎工作流程：")]),s._v(" "),t("ul",[t("li",[s._v("当页面打开时，JS 解释引擎会首先查看 JavaScript 代码中有没有低级的语法错误，如果有，代码就不会执行。如果没有，js 代码就会进入预解析（编译）阶段。")]),s._v(" "),t("li",[s._v("预解析阶段，首先创建 GO 全局对象，然后逐行的执行代码，碰到函数执行，则创建 AO 局部对象。")])]),s._v(" "),t("h3",{attrs:{id:"js-的执行分为-解释和执行两个阶段"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#js-的执行分为-解释和执行两个阶段"}},[s._v("#")]),s._v(" JS 的执行分为：解释和执行两个阶段")]),s._v(" "),t("ol",[t("li",[t("b",[s._v("解释阶段")])])]),s._v(" "),t("ul",[t("li",[s._v("词法分析")]),s._v(" "),t("li",[s._v("语法分析")]),s._v(" "),t("li",[s._v("作用域规则确定")])]),s._v(" "),t("ol",{attrs:{start:"2"}},[t("li",[t("b",[s._v("执行阶段")])])]),s._v(" "),t("ul",[t("li",[s._v("创建执行上下文")]),s._v(" "),t("li",[s._v("执行函数代码")]),s._v(" "),t("li",[s._v("垃圾回收")])]),s._v(" "),t("h3",{attrs:{id:"一、什么是-go-global-object"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#一、什么是-go-global-object"}},[s._v("#")]),s._v(" 一、什么是 GO(Global Object)：")]),s._v(" "),t("ul",[t("li",[s._v("含义：GO 是指全局作用域的全局对象（window）")]),s._v(" "),t("li",[s._v("形成时间：页面打开时")]),s._v(" "),t("li",[s._v("销毁时间：页面关闭时")])]),s._v(" "),t("p",[s._v("_js 全局预编译阶段，GO 对象的形成步骤：")]),s._v(" "),t("ul",[t("li",[s._v("创建一个 GO{}对象")]),s._v(" "),t("li",[s._v("找变量申明，将变量名作为 GO 对象的属性名，值是 undefined")]),s._v(" "),t("li",[s._v("找函数申明，值赋值函数体（function）")])]),s._v(" "),t("p",[t("em",[s._v("比如上面")])]),s._v(" "),t("h3",{attrs:{id:"二、什么是-ao-activation-object"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#二、什么是-ao-activation-object"}},[s._v("#")]),s._v(" 二、什么是 AO(Activation Object)")]),s._v(" "),t("ul",[t("li",[s._v("含义：AO 是指局部作用域的局部对象")]),s._v(" "),t("li",[s._v("形成时间：函数执行时")]),s._v(" "),t("li",[s._v("销毁时间：函数执行完毕")])]),s._v(" "),t("p",[t("em",[s._v("当一个函数执行时，AO 对象的整个赋值形成过程分为四个步骤：")])]),s._v(" "),t("ul",[t("li",[s._v("创建一个 AO{}对象")]),s._v(" "),t("li",[s._v("找到函数中的形参和变量，作为 AO 对象的属性名，这些属性名的属性值为 undefined")]),s._v(" "),t("li",[s._v("形参与实参相统一，即将实参的值赋值给形参")]),s._v(" "),t("li",[s._v("找到函数中的函数声明（非函数表达式），将函数名作为 AO 对象的属性名，值为函数体")])]),s._v(" "),t("p",[t("em",[s._v("比如上面 fn 函数执行时，AO 局部对象的整个赋值过程如下：")])]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("fn")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("c")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 第一步：创建AO{}对象")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/**\n   * AO {}\n   */")]),s._v("\n\n  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 第二步：找形参和变量")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/**\n        AO {\n            c: undefined,\n            a: undefined,\n            b: undefined,\n            d: undefined\n        }\n    */")]),s._v("\n\n  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 第三步：形参与实参相统一")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/**\n        AO {\n            c: true,\n            a: undefined,\n            b: undefined,\n            d: undefined\n        }\n    */")]),s._v("\n\n  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 第四步：找函数声明，函数名作为AO的属性名")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/**\n        AO {\n            c: true,\n            a: function(){},\n            b: function(){},\n            d: undefined\n        }\n    */")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 经过上面四个步骤，下面这一行代码执行时，AO对象如上所示")]),s._v("\n  console"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("c"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// true")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" c "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  console"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("a"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// function a(){}")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" a "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// Tips: 这里将 AO对象中 a属性赋值为1")]),s._v("\n  console"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("a"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 1")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("a")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// wo can do something")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  console"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("a"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 1")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("b")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 函数声明")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function-variable function"}},[s._v("b")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// Tips: 这里将 AO对象中的 b属性赋值为一个函数表达式")]),s._v("\n    console"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"函数表达式"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("b")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    console"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"函数声明"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("b")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 函数表达式")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" d "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// Tips: 这里将 AO对象中 d属性赋值为4")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("fn")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br"),t("span",{staticClass:"line-number"},[s._v("30")]),t("br"),t("span",{staticClass:"line-number"},[s._v("31")]),t("br"),t("span",{staticClass:"line-number"},[s._v("32")]),t("br"),t("span",{staticClass:"line-number"},[s._v("33")]),t("br"),t("span",{staticClass:"line-number"},[s._v("34")]),t("br"),t("span",{staticClass:"line-number"},[s._v("35")]),t("br"),t("span",{staticClass:"line-number"},[s._v("36")]),t("br"),t("span",{staticClass:"line-number"},[s._v("37")]),t("br"),t("span",{staticClass:"line-number"},[s._v("38")]),t("br"),t("span",{staticClass:"line-number"},[s._v("39")]),t("br"),t("span",{staticClass:"line-number"},[s._v("40")]),t("br"),t("span",{staticClass:"line-number"},[s._v("41")]),t("br"),t("span",{staticClass:"line-number"},[s._v("42")]),t("br"),t("span",{staticClass:"line-number"},[s._v("43")]),t("br"),t("span",{staticClass:"line-number"},[s._v("44")]),t("br"),t("span",{staticClass:"line-number"},[s._v("45")]),t("br"),t("span",{staticClass:"line-number"},[s._v("46")]),t("br"),t("span",{staticClass:"line-number"},[s._v("47")]),t("br"),t("span",{staticClass:"line-number"},[s._v("48")]),t("br"),t("span",{staticClass:"line-number"},[s._v("49")]),t("br"),t("span",{staticClass:"line-number"},[s._v("50")]),t("br"),t("span",{staticClass:"line-number"},[s._v("51")]),t("br"),t("span",{staticClass:"line-number"},[s._v("52")]),t("br"),t("span",{staticClass:"line-number"},[s._v("53")]),t("br"),t("span",{staticClass:"line-number"},[s._v("54")]),t("br"),t("span",{staticClass:"line-number"},[s._v("55")]),t("br"),t("span",{staticClass:"line-number"},[s._v("56")]),t("br"),t("span",{staticClass:"line-number"},[s._v("57")]),t("br")])]),t("p",[t("em",[s._v("当程序执行到 ‘console.log(c)’ 这一行时，AO 对象如下图所示：")])]),s._v(" "),t("p",[t("img",{attrs:{src:a(297),alt:"An image"}})]),s._v(" "),t("p",[t("em",[s._v("留个坑后面再写......")])]),s._v(" "),t("h3",{attrs:{id:"三、什么是-vo-variable-object"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#三、什么是-vo-variable-object"}},[s._v("#")]),s._v(" 三、什么是 VO(Variable Object)")]),s._v(" "),t("ul",[t("li",[s._v("含义：VO 是变量对象，是一个与执行上下文相关的特殊对象")]),s._v(" "),t("li",[s._v("包含：\n"),t("ul",[t("li",[s._v("变量 (var, 变量声明)；")]),s._v(" "),t("li",[s._v("函数声明 (FunctionDeclaration, 缩写为 FD)；")]),s._v(" "),t("li",[s._v("函数的形参；")])])]),s._v(" "),t("li",[s._v("VO 与 GO/AO 的关系，如下所示：")])]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[s._v("抽象变量对象"),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("VO")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("变量初始化过程的一般行为"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  ║\n  ╠══"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" 全局上下文变量对象GlobalContextVO\n  "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("║")]),s._v("        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("VO")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("===")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("===")]),s._v(" global"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  ║\n  ╚══"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("函数上下文变量对象FunctionContextVO")]),s._v("\n           "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("VO")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("===")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("AO")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" 并且添加了"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("arguments"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("和"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("formal parameters"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br")])]),t("h3",{attrs:{id:"四、-作用域"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#四、-作用域"}},[s._v("#")]),s._v(" 四、 作用域")]),s._v(" "),t("p",[s._v("当前正在执行的代码能够访问到变量的范围。")]),s._v(" "),t("ul",[t("li",[s._v("词法作用域：是在写代码或者定义的时候确定的，关注函数在何处申明")]),s._v(" "),t("li",[s._v("动态作用域：是在运行时确定的，关注函数从何处调用")])]),s._v(" "),t("p",[t("b",[s._v("js 采用词法作用域")]),s._v("，其作用域由你在写代码是将变量和块作用域写在哪里决定的，因此当词法分析器处理代码时会保持作用域不变，")]),s._v(" "),t("h4",{attrs:{id:"作用域链"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#作用域链"}},[s._v("#")]),s._v(" 作用域链")]),s._v(" "),t("p",[s._v("每个函数执行都需要开辟一个私有的执行上下文,创建执行上下文会初始化作用域链。\n作用域链包括当前函数存在的作用域以及所有父级作用域，当函数访问变量的时候，就会顺着这个作用域链去查找变量。")]),s._v(" "),t("h4",{attrs:{id:"分类"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#分类"}},[s._v("#")]),s._v(" 分类")]),s._v(" "),t("ul",[t("li",[s._v("全局作用域")]),s._v(" "),t("li",[s._v("函数作用域")]),s._v(" "),t("li",[s._v("块级作用域（es6 let const）")])]),s._v(" "),t("h3",{attrs:{id:"五、-执行上下文-ec"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#五、-执行上下文-ec"}},[s._v("#")]),s._v(" 五、 执行上下文(EC)")]),s._v(" "),t("p",[t("b",[s._v("简述：")]),s._v("当前 js 代码被解析和执行时所在的环境"),t("br"),s._v("\n由 js 引擎自动创建对象，包含对应作用域中的所有变量属性"),t("br"),s._v("\n执行上下文是指：代码执行或者函数调用时 在执行栈中产生的变量对象，这个变量对象我们无法直接访问，但是可以访问其中的变量，this 对象等")]),s._v(" "),t("h4",{attrs:{id:"执行上下文包含三个部分"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#执行上下文包含三个部分"}},[s._v("#")]),s._v(" 执行上下文包含三个部分")]),s._v(" "),t("ol",[t("li",[s._v("创建变量对象（Variable object ,VO）")]),s._v(" "),t("li",[s._v("创建作用域链(scope chain)")]),s._v(" "),t("li",[s._v("确定 this 值")])]),s._v(" "),t("p",[s._v("代码模拟执行上下文如下：")]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//执行上下文对象创建")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("ExecutionContext")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//变量对象|活动对象（VO ｜ AO）")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("variable object "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" activation object"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    arguments"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//函数参数，全局执行上下文中没有arguments")]),s._v("\n    variable"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 变量")]),s._v("\n    funcion"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 函数声明")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//作用域链接")]),s._v("\n  scope chain"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("variable object "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" all parents scope"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//变量对象和所有的父作用域")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//this指向")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("thisValue")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" context object\n\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br")])]),t("h4",{attrs:{id:"类型"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#类型"}},[s._v("#")]),s._v(" 类型")]),s._v(" "),t("ul",[t("li",[s._v("全局执行上下文：默认最基础的执行上下文，不在任何函数中的代码都位于全局上下文中，"),t("b",[s._v("一个程序中只能存在一个全局上下文")])]),s._v(" "),t("li",[s._v("函数执行上下文：每次函数调用（包括同一个函数多次调用）时，都会为该函数创建一个新的执行上下文，但是只有函数被调用时才会被创建，一个程序中可以存在多个函数执行上下文。")]),s._v(" "),t("li",[s._v("eval 执行上下文")])]),s._v(" "),t("h4",{attrs:{id:"执行上下文的生命周期"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#执行上下文的生命周期"}},[s._v("#")]),s._v(" 执行上下文的生命周期")]),s._v(" "),t("p",[s._v("一共有三个阶段：创建阶段、入栈执行阶段、出栈回收阶段")]),s._v(" "),t("ul",[t("li",[s._v("全局执行上下文：准备执行代码前产生，当页面关闭/刷新时销毁")]),s._v(" "),t("li",[s._v("函数执行上下文：调用函数时产生，函数执行完销毁")])]),s._v(" "),t("h4",{attrs:{id:"执行栈-ecstack"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#执行栈-ecstack"}},[s._v("#")]),s._v(" 执行栈（Ecstack）")]),s._v(" "),t("p",[s._v("执行栈又叫调用栈，是用来存储 js 程序中创建的“执行上下文”的一种先进后出的结构，入栈和出栈对应的是内存的申请和释放。")]),s._v(" "),t("p",[s._v("当 js 代码执行的时候，首先会创建一个全局的执行上下文，并压入到当前执行栈中，之后当发生函数调用的时候，js 引擎会为该函数创建一个“函数执行上下文”并压入到栈顶，当该函数执行完毕，其对应的“执行上下文”会被移除当前执行栈，调用栈最上面的那个“执行上下文”一直处于正在执行状态。")]),s._v(" "),t("h3",{attrs:{id:"六、-作用域和执行上下文区别"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#六、-作用域和执行上下文区别"}},[s._v("#")]),s._v(" 六、 作用域和执行上下文区别")]),s._v(" "),t("ul",[t("li",[s._v("作用域：是静态的，代码和函数定义的时候就确定了，一旦确定就不会变化")]),s._v(" "),t("li",[s._v("执行上下文：动态的，代码和函数执行的时候创建的，代码执行完就消失")]),s._v(" "),t("li",[s._v("联系：执行上下文环境是在对应的作用域中")])]),s._v(" "),t("p",[s._v("js 的代码在解释阶段就会确定作用域规则，因此作用域在函数定义的时候就已经确定了，而不是在函数执行的时候才确定，但是执行上下文是函数执行之前创建的，执行上下文最明显的就是 this 的指向是执行的时确定的，而作用域访问变量是编写代码的结构确定的。")]),s._v(" "),t("h3",{attrs:{id:"七、-总结"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#七、-总结"}},[s._v("#")]),s._v(" 七、 总结")]),s._v(" "),t("p",[s._v("一个作用域下")]),s._v(" "),t("ul",[t("li",[s._v("可能包含多个执行上下文环境（全局作用下有若干个函数被调用）")]),s._v(" "),t("li",[s._v("有可能从来没有过上下文环境（函数从来没有被调用过）")]),s._v(" "),t("li",[s._v("有可能有过（函数被调用过，上下文环境被销毁）")]),s._v(" "),t("li",[s._v("有可能同时存在一个或多个上下文环境（闭包）")]),s._v(" "),t("li",[s._v("同一个作用域下，不同的调用会产生不同的执行上下文环境，继而产生不同的变量值。")])]),s._v(" "),t("p",[s._v("作用域只是一个“地盘”，其中没有变量。变量是通过作用域对应的执行上下文环境中的变量对象来实现的。所以作用域是静态观念的，而执行上下文环境是动态上的，两者并不一样。\n同一个作用域下，对同一个函数的不同的调用会产生不同的执行上下文环境，继而产生不同的变量的值，所以，作用域中变量的值是在执行过程中确定的，而作用域是在函数创建时就确定的。\n如果要查找一个作用域下某个变量的值，就需要找到这个作用域对应的执行上下文环境，再在其中找到变量的值。")]),s._v(" "),t("h3",{attrs:{id:"引申"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#引申"}},[s._v("#")]),s._v(" 引申")]),s._v(" "),t("p",[t("em",[s._v("与通过 var 声明的有初始化值 undefined 的变量不同，通过 let/const 声明的变量直到它们的定义被执行时才初始化。在变量初始化前访问该变量会导致 ReferenceError。该变量处在一个自块顶部到初始化处理的“暂存死区”中。")])]),s._v(" "),t("p",[t("em",[s._v("使用 let / const 声明的全局变量，会被绑定到 Script 对象而不是 Window 对象，不能以 Window.xx 的形式使用；使用 var 声明的全局变量会被绑定到 Window 对象；使用 var / let / const 声明的局部变量都会被绑定到 Local 对象。注：Script 对象、Window 对象、Local 对象三者是平行并列关系。")])]),s._v(" "),t("p",[t("em",[s._v("Script 对象，如下图所示")])]),s._v(" "),t("p",[t("img",{attrs:{src:a(298),alt:"An image"}})])])}),[],!1,null,null,null);t.default=e.exports}}]);